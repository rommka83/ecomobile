"""
Директива маркирует параметр, в котором должен быть передан токен доступа [AccessToken.token].

Помимо обычной авторизации, некоторые действия могут быть ограничены дополнительной проверкой пользователя
(например, по паролю). Для совершения таких действий сначала нужно создать токен [AccessToken] с помощью соответствующих
мутаций (например, accessCreateToken). Затем передать значение поля [AccessToken.token] в параметре нужной
мутации/запроса помеченном этой директивой.
"""
directive @tokenAccess on ARGUMENT_DEFINITION

"""
Директива маркирует поля, для доступа к которым необходима авторизация пользователя.
"""
directive @authUser on FIELD_DEFINITION

# TODO: directive @rateLimit on FIELD_DEFINITION

"""
Директива маркирует поля с ограничением доступа.
Требует авторизации пользователя (заменяя директиву @authUser).
В параметре `authority` указано необходимое разрешение, которым должен обладать абонент.
"""
directive @auth(authority: ID!) on FIELD_DEFINITION

"""
Расширенный формат ISO-8601 со смещением временной зоны: `2011-12-03T10:15:30.123+01:00`.
Дробная часть секунд опциональна.
"""
scalar DateTime
"Локальная дата в формате `2021-09-26`"
scalar Date

"""
Номер телефона в формате 10 цифр.
Специальное "нулевое" значение - `0000000000`.
"""
scalar Msisdn

type Query {
    app: App!
}

type Mutation

"Сущность, уникально идентифицируемая по номеру телефона"
interface MsisdnIdentifier {
    "Номер телефона"
    msisdn: Msisdn!
}

"""
Параметры корреляции асинхронного запроса/ответа.

https://www.enterpriseintegrationpatterns.com/patterns/messaging/CorrelationIdentifier.html
https://microservices.io/patterns/observability/distributed-tracing.html
"""
type Correlation {
    """
    UUID.
    Объединяет цепочку зависимых друг от друга (порождаемых друг другом) команд/запросов/ответов/событий.
    """
    correlationId: ID!
    """
    UUID запроса/действия.
    Объединяет один запрос (команду) и все ответы/события связанные непосредственно с ним (кроме транзитивных команд,
    которые будут иметь свои actionId).
    Необходим для обеспечения идемпотентности операций. Должен быть уникальным для каждой отдельной мутации. Все
    повторные запросы (например, при ретраях) с тем же actionId независимо от параметров считаются тем же самым запросом
    и будут игнорироваться консумером, если связанные с запросом операции уже успешно произведены
    (https://microservices.io/patterns/communication-style/idempotent-consumer.html).
    """
    actionId: ID!
}

"То же, что и Correlation, но в виде input'а."
input CorrelationInput {
    correlationId: ID!
    actionId: ID!
}

"Месяц в определенном году"
type YearMonth {
    "Год"
    year: Int!
    "Месяц (1-12)"
    month: Int!
}

"Месяц в определенном году"
input YearMonthInput {
    "Год"
    year: Int!
    "Месяц (1-12)"
    month: Int!
}

"Географические координаты"
type GeoPoint {
    "Долгота. Градусы с дробной частью."
    longitude: Float!
    "Широта. Градусы с дробной частью."
    latitude: Float!
}
